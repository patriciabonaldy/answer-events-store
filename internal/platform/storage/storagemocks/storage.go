// Code generated by mockery v2.10.6. DO NOT EDIT.

package storagemocks

import (
	context "context"

	internal "github.com/patriciabonaldy/bequest_challenge/internal"
	mock "github.com/stretchr/testify/mock"
)

// Storage is an autogenerated mock type for the Storage type
type Storage struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: ctx, ID
func (_m *Storage) GetByID(ctx context.Context, ID string) (internal.Answer, error) {
	ret := _m.Called(ctx, ID)

	var r0 internal.Answer
	if rf, ok := ret.Get(0).(func(context.Context, string) internal.Answer); ok {
		r0 = rf(ctx, ID)
	} else {
		r0 = ret.Get(0).(internal.Answer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ctx, answer
func (_m *Storage) Save(ctx context.Context, answer internal.Answer) error {
	ret := _m.Called(ctx, answer)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, internal.Answer) error); ok {
		r0 = rf(ctx, answer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: ctx, answer
func (_m *Storage) Update(ctx context.Context, answer internal.Answer) error {
	ret := _m.Called(ctx, answer)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, internal.Answer) error); ok {
		r0 = rf(ctx, answer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
